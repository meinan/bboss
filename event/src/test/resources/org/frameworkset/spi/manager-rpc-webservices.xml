<properties>
     <!-- 
		鏍囪鏄惁鍚敤webservice鏈嶅姟锛屼负false鏃讹紝鍚姩cxf鐨剆erverlet灏嗗け鏁?	 -->	
	<property name="rpc.webservice.enable" value="true"/>	
	
	<!-- 
		webservice rpc鏈嶅姟璇锋眰鍜屽搷搴斿鐞嗙被
	 -->
	<property name="rpc.webservice.RPCServerIoHandler" singlable="true" class="org.frameworkset.spi.remote.webservice.RPCWebserviceIOHandler">	
		<construction>
			<property name="name" 
				      value="RPCWebserviceIOHandler" class="String"/>				
			<property name="request_handler" 
				      refid="attr:rpc.request_handler" />	
			<property name="webservice_server_type" 
				      value="cxf" />		      			
			<property name="localaddress" 
				      value="http://localhost:8080/WebRoot/cxfservices" />	      
		</construction>			
	</property>
	
	
	
	<!-- 
		绯荤粺鍙戝竷鐨剋ebservice鏈嶅姟閰嶇疆
	 -->
	<property name="cxf.webservices.config">
		<list>
		<!-- 
			webservice RPC鏈嶅姟,鐢ㄦ潵瀹炵幇涓氬姟缁勪欢涔嬮棿鐨勮繙绋嬫湇鍔¤皟鐢?			灞炴€ц鏄庯細
			name 鏈嶅姟鐨勫敮涓€鏍囪瘑鍚嶇О
			singleable 鏈嶅姟缁勪欢鐨勫崟鍒楁ā寮?			servicePort 鍙戝竷鐨勬湇鍔＄鍙?
			class 鏈嶅姟鐨勫疄鐜扮被
			mtom 鏈嶅姟鏄惁鏀寔闄勪欢浼犺緭 
				true锛氭敮鎸侊紝false锛氫笉鏀寔		
		 -->
			<property name="rpc.webservice.RPCCall" 
					  singlable="true" 
					  servicePort="RPCCallServicePort"				  
					  class="org.frameworkset.spi.remote.webservice.RPCCall"/>	
		</list>
	</property>
	
	<property name="cxf.client.config" enable="true">
		<map>
			<property label="connectionTimeout " name="connectionTimeout"
				value="30000" class="long">
				<description> <![CDATA[Specifies the amount of time, in milliseconds, that the client will attempt to establish a connection before it times out. The default is 30000 (30 seconds). 
0 specifies that the client will continue to attempt to open a connection indefinitely. ]]></description>
			</property>
			<property label="receiveTimeout" name="receiveTimeout"
				value="60000" class="long">
				<description> <![CDATA[Specifies the amount of time, in milliseconds, that the client will wait for a response before it times out. The default is 60000. 
0 specifies that the client will wait indefinitely. ]]></description>
			</property>
			<property label="autoRedirect" name="autoRedirect"
				value="false" class="boolean">
				<description> <![CDATA[Specifies if the client will automatically follow a server issued redirection. The default is false. ]]></description>
			</property>
			<property label="maxRetransmits" name="maxRetransmits"
				value="-1" class="int">
				<description> <![CDATA[Specifies the maximum number of times a client will retransmit a request to satisfy a redirect. The default is -1 which specifies that unlimited retransmissions are allowed. ]]></description>
			</property>
			<property label="allowChunking" name="allowChunking"
				value="true" class="boolean">
				<description> <![CDATA[Specifies whether the client will send requests using chunking. The default is true which specifies that the client will use chunking when sending requests. 
Chunking cannot be used used if either of the following are true: 
http-conf:basicAuthSupplier is configured to provide credentials preemptively. 
AutoRedirect is set to true. 
In both cases the value of AllowChunking is ignored and chunking is disallowed. 
See note about chunking below. ]]></description>
			</property>
<!--			<property label="proxyServer" name="proxyServer"-->
<!--				value="172.16.17.1" class="String">-->
<!--				<description> <![CDATA[Specifies the URL of the proxy server through which requests are routed. ]]></description>-->
<!--			</property>-->
<!--			<property label="proxyServerPort" name="proxyServerPort"-->
<!--				value="808" class="int">-->
<!--				<description> <![CDATA[Specifies the port number of the proxy server through which requests are routed. ]]></description>-->
<!--			</property>-->
<!--			<property label="proxyServerType" name="proxyServerType"-->
<!--				value="SOCKS" >-->
				<!-- 
					鎸囧畾灞炴€ф敞鍏ユ椂鐨勫睘鎬х紪杈戝拰杞崲鍣?					
					绯荤粺榛樿鏀寔瀛楃涓插悜鍏朵粬鍩烘湰绫昏杞崲:					 
					 * int,char,short,double,float,long,boolean,byte
					 * java.sql.Date,java.util.Date,
					 * Integer
					 * Long
					 * Float
					 * Short
					 * Double
					 * Character
					 * Boolean
					 * Byte
					濡傛灉涓嶆槸鍩烘湰鏁版嵁绫诲瀷閭ｅ氨闇€瑕侀€氳繃鑷畾涔夌殑灞炴€х紪杈戝櫒鏉ュ疄鐜帮紝灞炴€х紪杈戝櫒蹇呴渶瀹炵幇鎺ュ彛:
						com.frameworkset.util.EditorInf
						
						Object getValueFromObject(Object fromValue) ;    
    					Object getValueFromString(String fromValue);
				 -->
<!--				<editor class="org.frameworkset.spi.remote.webservice.ProxyServerTypeEditor"/>-->
<!--				<description> <![CDATA[Specifies the type of proxy server used to route requests. Valid values are: -->
<!--				HTTP(default) -->
<!--				SOCKS -->
<!--				]]></description>-->
<!--			</property>-->
		</map>
	</property>
	
	<property  name="ws.ssl.config" enable="false">
		<map>
			<property name="keyManagers" keyPassword="password">
				<list>
					<property name="keyStore1" type="JKS" password="password" file="src/test/java/org/apache/cxf/systest/http/resources/Morpit.jks"/>
				</list>
			</property>
			
			<property name="trustManagers" keyPassword="password">
				<list>
					<property name="keyStore1" type="JKS" password="password" file="src/test/java/org/apache/cxf/systest/http/resources/Truststore.jks"/>
				</list>
			</property>
			
			<property name="cipherSuitesFilter">
				<list>
					<property value=".*_EXPORT1024_.*"/>
			        <property value=".*_WITH_DES_.*"/>
			        <property value=".*_WITH_NULL_.*"/>
			        <property value=".*_DH_anon_.*"/>
				</list>
			</property>
			
			<property name="userName" value="Betty"/>
				
			<property name="password" value="password"/>
		<!-- 
			<http:tlsClientParameters>
	      <sec:keyManagers keyPassword="password">
	           <sec:keyStore type="JKS" password="password"
	                file="src/test/java/org/apache/cxf/systest/http/resources/Morpit.jks"/>
	      </sec:keyManagers>
	      <sec:trustManagers>
	          <sec:keyStore type="JKS" password="password"
	               file="src/test/java/org/apache/cxf/systest/http/resources/Truststore.jks"/>
	      </sec:trustManagers>
	      <sec:cipherSuitesFilter>-->
	        <!-- these filters ensure that a ciphersuite with
	          export-suitable or null encryption is used,
	          but exclude anonymous Diffie-Hellman key change as
	          this is vulnerable to man-in-the-middle attacks -->
	  <!--      <sec:include>.*_EXPORT_.*</sec:include>
	        <sec:include>.*_EXPORT1024_.*</sec:include>
	        <sec:include>.*_WITH_DES_.*</sec:include>
	        <sec:include>.*_WITH_NULL_.*</sec:include>
	        <sec:exclude>.*_DH_anon_.*</sec:exclude>
	      </sec:cipherSuitesFilter>
	  </http:tlsClientParameters>
	  <http:authorization>
	     <sec:UserName>Betty</sec:UserName>
	     <sec:Password>password</sec:Password>
	  </http:authorization>
			
		 -->
			<property>
			</property>
		</map>
	</property>
</properties>